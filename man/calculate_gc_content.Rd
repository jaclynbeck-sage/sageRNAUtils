% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gc_content_functions.R
\name{calculate_gc_content}
\alias{calculate_gc_content}
\title{Calculate Gene GC Content}
\usage{
calculate_gc_content(ranges_obj, sequences, additional_attributes = NULL)
}
\arguments{
\item{ranges_obj}{a \link[GenomicRanges:GRanges-class]{GenomicRanges::GRanges} object containing the start and
end coordinates of each exon for each gene. This object must contain either
a \code{gene_id} or \code{ensembl_gene_id} metadata column. It should also have an
\code{external_gene_name} column. Values in \code{seqnames(ranges_obj)} must match
the values in \code{names(sequences)}, and coordinates should be relative to the
corresponding sequence in \code{sequences}. It is assumed that coordinates start
at 1.}

\item{sequences}{a \link[Biostrings:XStringSet-class]{Biostrings::DNAStringSet} object where each item is a
\code{Biostrings::DNAString} containing the sequence for a gene or chromosome.
\code{names(sequences)} must match the values in \code{seqnames(ranges_obj)}.}

\item{additional_attributes}{(optional) a vector of additional column names
in \code{ranges_obj} to retain in the result beyond what is returned by default
in this function. If \code{NULL}, only the default columns are retained in the
result.}
}
\value{
a data.frame where rows are genes and columns are variables. It will
contain, at a minimum, columns for \code{ensembl_gene_id}, \code{external_gene_name},
\code{gene_biotype}, \code{chromosome_name}, \code{gene_length}, and \code{percent_gc_content}.
It will also contain columns listed in the \code{additional_attributes}
argument if it is not \code{NULL}.
}
\description{
Calculate gene length and GC content of a set of genes from a GRanges object
and a DNAStringSet. It is highly recommended that you run either
\code{\link[=get_gc_content_gtf]{get_gc_content_gtf()}} or \code{\link[=get_gc_content_biomart]{get_gc_content_biomart()}} instead of calling this
function directly.
}
\details{
\strong{GTF/FASTA input}

If the original input was imported from GTF and FASTA files, each \code{DNAString}
in \code{sequences} will be the sequence of an entire chromosome, and the
coordinates in \code{ranges_obj} should be relative to the start of the
chromosome, which is the default in GTF files.

\strong{BioMart input}

If the original input was from Biomart, each \code{DNAString} in \code{sequences}
will be the sequence of a single gene, and the coordinates in \code{ranges_obj}
should be relative to the start of the gene. Note that for genes on the
reverse strand, Biomart returns the gene sequence as the reverse complement
of the reference strand, such that position 1 on the reference strand is
position \verb{<gene_length>} on the reverse strand, and position \verb{<gene_length>}
of the reference strand is position 1 of the reverse strand. However, the
coordinates given by Biomart are always relative to the reference strand even
if it returns a reverse complement sequence. This means that one of two
adjustments need to be made \emph{prior} to calling this function.

Either:
\enumerate{
\item \code{sequences} needs to be updated so that the sequence for every gene on
the negative/reverse strand is reverse-complemented, or
\item coordinates for exons on the reverse strand need to be adjusted to be
relative to the start of reverse complement sequence, e.g. if BioMart
returns coordinates \code{start = 3} and \code{end = 10}, the start position is now
the \emph{end} coordinate relative to the reverse complement strand, and should
be adjusted as position <gene_length - 3 + 1>. The original end position is
now the start coordinate and is adjusted as <gene_length - 10 + 1>.
}

\link{get_gc_content_biomart} does this adjustment for you.

No such adjustment is necessary for data from GTF and FASTA files, as the
sequences are always on the reference strand.

\strong{Other input}

If input is being constructed by some other means, ensure that the
coordinates in \code{ranges_obj} are relative to the start of the corresponding
sequence(s) in \code{sequences}. \code{names(sequences)} must match the values in
\code{seqnames(ranges_obj)}.
}
\seealso{
\link{get_gc_content_biomart}, \link{get_gc_content_gtf}
}
