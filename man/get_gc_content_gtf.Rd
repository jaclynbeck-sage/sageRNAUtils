% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gc_content_functions.R
\name{get_gc_content_gtf}
\alias{get_gc_content_gtf}
\title{Get Gene GC Content from GTF and FASTA reference files}
\usage{
get_gc_content_gtf(
  gtf_file,
  fasta_file,
  include_introns = FALSE,
  additional_attributes = NULL,
  verbose = TRUE
)
}
\arguments{
\item{gtf_file}{the full file path of the reference GTF file. URLs are also
acceptable. The GTF file can be compressed (.gtf.gz) or not (.gtf). The GTF
file must have columns named "gene_id", "gene_name", and "gene_type".}

\item{fasta_file}{the full file path of the reference FASTA file. URLs are
also acceptable. The FASTA file can be compressed (.fa.gz) or not (.fa).}

\item{include_introns}{(optional) if \code{FALSE}, GC content will be calculated
using exon sequences only. If \code{TRUE}, content will be calculated using the
entire gene sequence, including introns. Defaults to \code{FALSE}.}

\item{additional_attributes}{(optional) a vector of additional column names
from the GTF file to retain in the result beyond what is returned by default
in this function. If \code{NULL}, only the default columns are retained in the
result.}

\item{verbose}{(optional) whether to print status messages}
}
\value{
a data.frame where rows are genes and columns are variables. It will
contain columns for \code{ensembl_gene_id}, \code{external_gene_name},
\code{gene_biotype}, \code{chromosome_name}, \code{gene_length}, and \code{percent_gc_content}.
}
\description{
Uses GTF and FASTA reference files to calculate gene length and GC content.
}
\details{
This function is a wrapper around \code{\link[=calculate_gc_content]{calculate_gc_content()}}, which calculates
GC content based on either the entire gene, including both introns and exons,
or just exon sequences only. Coordinates and sequences are obtained from
reference GTF and FASTA files, which ideally should match the files that were
used to align the RNA seq data.

This function has been tested with human genome data from Gencode, although
it should work for other species and sources as well.

This method is likely to be more accurate than \link{get_gc_content_biomart} in
cases where no Ensembl version exactly corresponds to the reference, or where
the genome is custom-built.
}
\examples{
\dontrun{
# Using local files
gc_content <- get_gc_content_gtf(
  gtf_file = "data/gencode.v43.primary_assembly.annotation.gtf.gz",
  fasta_file = "data/GRCH38.primary_assembly.genome.fa.gz"
)

# Using URLS
gc_content <- get_gc_content_gtf(
  gtf_file = paste0(
    "https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/",
    "gencode.v43.primary_assembly.basic.annotation.gtf.gz"
  ),
  fasta_file = paste0(
    "https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/",
    "GRCh38.primary_assembly.genome.fa.gz"
  )
)
}
}
\seealso{
\link{get_gc_content_biomart}, \link{calculate_gc_content}
}
